GSMATCH=LEQUAL,1,0
!
CASE_SENSITIVE=YES
SYMBOL_VECTOR = ( -
	MQTTAsync_addCommand = PROCEDURE, -
	MQTTAsync_checkDisconnect = PROCEDURE, -
	MQTTAsync_checkTimeouts = PROCEDURE, -
	MQTTAsync_cleanSession = PROCEDURE, -
	MQTTAsync_completeConnection = PROCEDURE, -
	MQTTAsync_connect = PROCEDURE, -
	MQTTAsync_connecting = PROCEDURE, -
	MQTTAsync_create = PROCEDURE, -
	MQTTAsync_cycle = PROCEDURE, -
	MQTTAsync_deliverMessage = PROCEDURE, -
	MQTTAsync_destroy = PROCEDURE, -
	MQTTAsync_disconnect = PROCEDURE, -
	MQTTAsync_disconnect1 = PROCEDURE, -
	MQTTAsync_disconnect_internal = PROCEDURE, -
	MQTTAsync_elapsed = PROCEDURE, -
	MQTTAsync_emptyMessageQueue = PROCEDURE, -
	MQTTAsync_free = PROCEDURE, -
	MQTTAsync_freeCommand = PROCEDURE, -
	MQTTAsync_freeCommand1 = PROCEDURE, -
	MQTTAsync_freeMessage = PROCEDURE, -
	MQTTAsync_getPendingTokens = PROCEDURE, -
	MQTTAsync_getVersionInfo = PROCEDURE, -
	MQTTAsync_insertInOrder = PROCEDURE, -
	MQTTAsync_isConnected = PROCEDURE, -
	MQTTAsync_persistCommand = PROCEDURE, -
	MQTTAsync_persistQueueEntry = PROCEDURE, -
	MQTTAsync_processCommand = PROCEDURE, -
	MQTTAsync_receiveThread = PROCEDURE, -
	MQTTAsync_removeRespons1h26703$ = PROCEDURE, -
	MQTTAsync_restoreCommand = PROCEDURE, -
	MQTTAsync_restoreCommands = PROCEDURE, -
	MQTTAsync_restoreMessageQueue = PROCEDURE, -
	MQTTAsync_restoreQueueEntry = PROCEDURE, -
	MQTTAsync_retry = PROCEDURE, -
	MQTTAsync_send = PROCEDURE, -
	MQTTAsync_sendMessage = PROCEDURE, -
	MQTTAsync_sendThread = PROCEDURE, -
	MQTTAsync_setCallbacks = PROCEDURE, -
	MQTTAsync_setTraceCallback = PROCEDURE, -
	MQTTAsync_setTraceLevel = PROCEDURE, -
	MQTTAsync_sleep = PROCEDURE, -
	MQTTAsync_start_clock = PROCEDURE, -
	MQTTAsync_stop = PROCEDURE, -
	MQTTAsync_subscribe = PROCEDURE, -
	MQTTAsync_subscribeMany = PROCEDURE, -
	MQTTAsync_terminate = PROCEDURE, -
	MQTTAsync_unpersistCommand = PROCEDURE, -
	MQTTAsync_unpersistQueueEntry = PROCEDURE, -
	MQTTAsync_unsubscribe = PROCEDURE, -
	MQTTAsync_unsubscribeMany = PROCEDURE, -
	MQTTAsync_writeComplete = PROCEDURE, -
	MQTTProtocol_checkPendingWrites = PROCEDURE, -
	MQTTProtocol_closeSession = PROCEDURE, -
	MQTTClient_packet_names = DATA, -
	MQTTPacket_Factory = PROCEDURE, -
	MQTTPacket_ack = PROCEDURE, -
	MQTTPacket_decode = PROCEDURE, -
	MQTTPacket_encode = PROCEDURE, -
	MQTTPacket_freePublish = PROCEDURE, -
	MQTTPacket_freeSuback = PROCEDURE, -
	MQTTPacket_free_packet = PROCEDURE, -
	MQTTPacket_header_only = PROCEDURE, -
	MQTTPacket_name = PROCEDURE, -
	MQTTPacket_publish = PROCEDURE, -
	MQTTPacket_send = PROCEDURE, -
	MQTTPacket_send_ack = PROCEDURE, -
	MQTTPacket_send_disconnect = PROCEDURE, -
	MQTTPacket_send_puback = PROCEDURE, -
	MQTTPacket_send_pubcomp = PROCEDURE, -
	MQTTPacket_send_publish = PROCEDURE, -
	MQTTPacket_send_pubrec = PROCEDURE, -
	MQTTPacket_send_pubrel = PROCEDURE, -
	MQTTPacket_sends = PROCEDURE, -
	MQTTPacket_connack = PROCEDURE, -
	MQTTPacket_send_connect = PROCEDURE, -
	MQTTPacket_send_pingreq = PROCEDURE, -
	MQTTPacket_send_subscribe = PROCEDURE, -
	MQTTPacket_send_unsubscribe = PROCEDURE, -
	MQTTPacket_suback = PROCEDURE, -
	MQTTPersistence_clear = PROCEDURE, -
	MQTTPersistence_close = PROCEDURE, -
	MQTTPersistence_create = PROCEDURE, -
	MQTTPersistence_initialize = PROCEDURE, -
	MQTTPersistence_insertInOrder = PROCEDURE, -
	MQTTPersistence_put = PROCEDURE, -
	MQTTPersistence_remove = PROCEDURE, -
	MQTTPersistence_restore = PROCEDURE, -
	MQTTPersistence_restorePacket = PROCEDURE, -
	MQTTPersistence_wrapMsgID = PROCEDURE, -
	MQTTProtocol_assignMsgId = PROCEDURE, -
	MQTTProtocol_createMessage = PROCEDURE, -
	MQTTProtocol_emptyMessageList = PROCEDURE, -
	MQTTProtocol_freeClient = PROCEDURE, -
	MQTTProtocol_freeMessageList = PROCEDURE, -
	MQTTProtocol_handlePubacks = PROCEDURE, -
	MQTTProtocol_handlePubcomps = PROCEDURE, -
	MQTTProtocol_handlePublishes = PROCEDURE, -
	MQTTProtocol_handlePubrecs = PROCEDURE, -
	MQTTProtocol_handlePubrels = PROCEDURE, -
	MQTTProtocol_keepalive = PROCEDURE, -
	MQTTProtocol_removePublication = PROCEDURE, -
	MQTTProtocol_retries = PROCEDURE, -
	MQTTProtocol_retry = PROCEDURE, -
	MQTTProtocol_startPublish = PROCEDURE, -
	MQTTProtocol_startPublishCommon = PROCEDURE, -
	MQTTProtocol_storePublication = PROCEDURE, -
	MQTTProtocol_storeQoS0 = PROCEDURE, -
	MQTTProtocol_addressPort = PROCEDURE, -
	MQTTProtocol_connect = PROCEDURE, -
	MQTTProtocol_handlePingresps = PROCEDURE, -
	MQTTProtocol_handleSubacks = PROCEDURE, -
	MQTTProtocol_handleUnsubacks = PROCEDURE, -
	MQTTProtocol_subscribe = PROCEDURE, -
	MQTTProtocol_unsubscribe = PROCEDURE -
)
!
